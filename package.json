{
	"type": "module",
	"scripts": {
		"start": "npm run replica && npm run deploy-local && npm run decl && cd frontend && npm run start && cd ..",
		"build": "cd frontend && npm run build",
		"create-canisters": "dfx canister create main --no-wallet --specified-id 2d2zu-vaaaa-aaaak-qb6pq-cai && dfx canister create assets --no-wallet",
		"replica": "dfx stop && dfx start --clean --background && npm run create-canisters",
		"decl": "npm run decl:cli && npm run decl:frontend",
		"lint": "npm run lint:cli && npm run lint:frontend",
		"lint:cli": "eslint cli --ext .ts",
		"lint:frontend": "eslint frontend --ext .svelte,.ts",
		"decl:cli": "dfx generate main && dfx generate bench",
		"decl:frontend": "cp -r cli/declarations frontend",
		"deploy": "DFX_MOC_PATH=$(mocv bin 0.10.2)/moc dfx deploy --no-wallet --identity ${IDENTITY:-default} --network ${NETWORK:-local}",
		"deploy-local": "NODE_ENV=development dfx deploy main --no-wallet --identity default && npm run decl",
		"deploy-staging": "NODE_ENV=production IDENTITY=mops NETWORK=staging npm run deploy",
		"deploy-ic": "NODE_ENV=production IDENTITY=mops NETWORK=ic npm run deploy",
		"deploy:main": "NODE_ENV=development IDENTITY=default NETWORK=local npm run deploy main",
		"build-docs": "cd docs && npm run build",
		"prepare-cli": "cd cli && npm run prepare",
		"prepare": "husky install",
		"postinstall": "(cd frontend && npm install) && (cd cli && npm install) && (cd docs && npm install)",
		"mo-dev": "mo-dev --exec 'clear && echo \"\nChecking...\n\" && moc --check ./backend/main/main-canister.mo $(mops sources) && echo \"\\033[0;32mOK\\033[0m\" || echo \"\\033[0;31mFAIL\\033[0m\" 1>&2;'",
		"test": "mops test"
	},
	"devDependencies": {
		"@typescript-eslint/eslint-plugin": "6.7.5",
		"@typescript-eslint/parser": "6.7.5",
		"eslint": "8.51.0",
		"eslint-plugin-svelte": "2.34.0",
		"husky": "8.0.3",
		"mo-dev": "0.12.0",
		"typescript": "5.2.2"
	}
}
