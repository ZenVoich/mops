type _anon_class_13_1 = 
 service {
   getSchema: () -> (BenchSchema) query;
   getStats: () -> (BenchResult) query;
   init: () -> (BenchSchema);
   runCellQuery: (rowIndex: nat, colIndex: nat) -> (BenchResult) query;
   runCellUpdate: (rowIndex: nat, colIndex: nat) -> (BenchResult);
   runCellUpdateAwait: (rowIndex: nat, colIndex: nat) -> (BenchResult);
 };
type BenchSchema = 
 record {
   cols: vec text;
   description: text;
   name: text;
   rows: vec text;
 };
type BenchResult = 
 record {
   instructions: int;
   rts_collector_instructions: int;
   rts_heap_size: int;
   rts_logical_stable_memory_size: int;
   rts_memory_size: int;
   rts_mutator_instructions: int;
   rts_reclaimed: int;
   rts_stable_memory_size: int;
   rts_total_allocation: int;
   stable_memory_size: int;
 };
service : () -> _anon_class_13_1
