type HttpResponse = 
 record {
   body: blob;
   headers: vec HeaderField;
   status_code: nat16;
 };
type HttpRequest = 
 record {
   body: blob;
   headers: vec HeaderField;
   method: text;
   url: text;
 };
type HeaderField = 
 record {
   text;
   text;
 };
type Chunk = blob;
type BackupId = nat;
type Backup = 
 service {
   add: (blob) -> () oneway;
   finishBackup: (BackupId) -> ();
   getChunk: (nat, nat) -> (Chunk, bool) query;
   http_request: (HttpRequest) -> (HttpResponse) query;
   startBackup: (text) -> (BackupId);
   uploadChunk: (BackupId, Chunk) -> ();
 };
service : (vec principal) -> Backup
