name: CI

on:
  push:
    branches:
      - main
      - master
  pull_request:

jobs:
  build:
    strategy:
      max-parallel: 2
      matrix:
        moc-version: [0.10.1]
        # mops-version: [./cli, ic-mops@latest, ic-mops@0.28.2]
        mops-version: [./cli]
        node-version: [20]

    runs-on: ubuntu-latest
    name: node ${{ matrix.node-version }}, moc ${{ matrix.moc-version }}, ${{ matrix.mops-version }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - uses: oven-sh/setup-bun@v1.1.1

      - uses: dfinity/setup-dfx@main
        with:
          dfx-version: 0.15.2

      - name: Cache mops packages
        uses: actions/cache@v3
        with:
          key: mops-packages-${{ hashFiles('mops.toml') }}
          restore-keys: |
            mops-packages-${{ hashFiles('mops.toml') }}
            mops-packages-
          path: |
            ~/.cache/mops

      - name: Install npm packages
        run: bun install

      - name: Build local cli
        if: ${{ matrix.mops-version == './cli' }}
        run: cd cli && npm run prepare

      - name: Install mops
        run: npm i -g ${{ matrix.mops-version }}

      - name: Install mops packages
        run: mops install

      - name: Select moc version
        run: mops toolchain use moc ${{ matrix.moc-version }}

      - name: Run replica
        run: npm run replica

      - name: Deploy backend
        run: npm run deploy-local

      - name: Build frontend
        run: npm run build-frontend

      - name: Build docs
        run: npm run build-docs